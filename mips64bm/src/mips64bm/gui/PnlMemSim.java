/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mips64bm.gui;

import java.io.File;
import java.util.LinkedList;
import javax.swing.JFileChooser;
import javax.swing.table.TableModel;
import mips64bm.rtd.*;

/**
 *
 * @author jonats
 */
public class PnlMemSim extends javax.swing.JPanel {

    RuntimeData rtd;

    /**
     * Creates new form PnlMemSim
     */
    public PnlMemSim(RuntimeData rtd) {
        initComponents();
        this.rtd = rtd;
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        updateInternals();
    }

    public void updateInternals() {
        //if
        jLabel2.setText(rtd.ifIdIr);
        jLabel5.setText(rtd.ifIdNpc);
        jLabel6.setText(rtd.pc);
        //id
        jLabel12.setText(rtd.idExA);
        jLabel13.setText(rtd.idExB);
        jLabel14.setText(rtd.idExNpc);
        jLabel15.setText(rtd.idExIr);
        jLabel16.setText(rtd.idExImm);
        ///ex
        jLabel21.setText(rtd.exMemIr);
        jLabel22.setText(rtd.exMemAluOut);
        jLabel23.setText(rtd.exMemCond);
        jLabel24.setText(rtd.exMemB);
        //mem
        jLabel29.setText(rtd.memWdIr);
        jLabel30.setText(rtd.memWbLmd);
        jLabel31.setText(rtd.memExMemAluOut);
        jLabel32.setText(rtd.memWbAluOut);
        //wb
        jLabel34.setText(rtd.regsMemWbIr);
    }

    public LinkedList<String[]> combineLabelTable(LinkedList<String[]> ds, LinkedList<String[]> cs) {
        LinkedList<String[]> ret = new LinkedList<String[]>();
        for (int i = 0; i < ds.size(); i++) {
            String label = ds.get(i)[0];
            String address = ds.get(i)[1];
            address = Integer.toHexString(Integer.parseInt(address));
            String[] tmp = {label, address};
            ret.add(tmp);
        }
        for (int i = 0; i < cs.size(); i++) {
            String label = cs.get(i)[0];
            String address = cs.get(i)[1];
            address = Integer.toHexString(Integer.parseInt(address));
            String[] tmp = {label, address};
            ret.add(tmp);
        }
        return ret;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("src code"));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton3.setText("upload");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("registers"));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("units"));

        jButton1.setText("run all");

        jButton2.setText("run one cycle");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("IF"));

        jLabel3.setText("IF / ID.IR <- ");

        jLabel4.setText("IF / ID.NPC <- ");

        jLabel1.setText("PC <- ");

        jLabel2.setText("jLabel2");

        jLabel5.setText("jLabel5");

        jLabel6.setText("jLabel6");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6)))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("ID"));

        jLabel7.setText("ID / EX.A <- ");

        jLabel8.setText("ID / EX.B <- ");

        jLabel9.setText("ID / EX.NPC <- ");

        jLabel10.setText("ID / EX.IR <- ");

        jLabel11.setText("ID / EX.Imm <- ");

        jLabel12.setText("jLabel12");

        jLabel13.setText("jLabel13");

        jLabel14.setText("jLabel14");

        jLabel15.setText("jLabel15");

        jLabel16.setText("jLabel16");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel15)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel16))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("EX"));

        jLabel17.setText("EX / MEM.IR <- ");

        jLabel18.setText("EX / MEM.ALUOutput <- ");

        jLabel19.setText("EX / MEM.COND <- ");

        jLabel20.setText("EX / MEM.B <- ");

        jLabel21.setText("jLabel21");

        jLabel22.setText("jLabel22");

        jLabel23.setText("jLabel23");

        jLabel24.setText("jLabel24");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(jLabel23)
                    .addComponent(jLabel22)
                    .addComponent(jLabel21))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel24)))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("MEM"));

        jLabel25.setText("MEM / WB.IR <- ");

        jLabel26.setText("MEM / WB.LMD <- ");

        jLabel27.setText("MEM(EX/MEM.ALUOutput) <- ");

        jLabel28.setText("MEM / WB.ALUOutput <- ");

        jLabel29.setText("jLabel29");

        jLabel30.setText("jLabel30");

        jLabel31.setText("jLabel31");

        jLabel32.setText("jLabel32");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27)
                    .addComponent(jLabel28)
                    .addComponent(jLabel26)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel32)
                    .addComponent(jLabel31)
                    .addComponent(jLabel30)
                    .addComponent(jLabel29))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jLabel31))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(jLabel32))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("WB"));

        jLabel33.setText("REGS[MEM/WB.IR] <- ");

        jLabel34.setText("jLabel34");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel34)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel33)
                .addComponent(jLabel34))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("memory"));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        // note data segment format is label: hexval which is 1 byte always
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            //System.out.println("Selected file: " + selectedFile.getAbsolutePath());
            String selectedFileName = selectedFile.getAbsolutePath();
            String contents = new PreProcessor().getPreProcessed(selectedFileName);
            jTextArea1.setText(contents);
            String cont[] = contents.split("\n");
            LinkedList<String[]> sepcd = rtd.bto.getSeparatedSegments(cont);
            String[] codeSegSrc = sepcd.get(1);
            String[] datSegSrc = sepcd.get(0);
            int lends = rtd.bto.getDSLen(datSegSrc);
            int cstart = lends;
            LinkedList<String[]> labelTableDS = rtd.bto.getLabelTableDS(datSegSrc);
            LinkedList<String[]> labelTableCS = rtd.bto.getLabelTableCS(codeSegSrc, lends);
            LinkedList<String[]> labelTable = combineLabelTable(labelTableDS, labelTableCS);
            LinkedList<String[]> progBytes = rtd.bto.getProgramBytes(datSegSrc, codeSegSrc, labelTable);
            LinkedList<String[]> instrxnTable = rtd.bto.getInstrxnTable(codeSegSrc, cstart);
            //System.out.println("label table");
            for (int i = 0; i < labelTable.size(); i++) {
                //System.out.println(labelTable.get(i)[1] + " " + labelTable.get(i)[0]);
            }
            //System.out.println("prog bytes");
            for (int i = 0; i < progBytes.size(); i++) {
                //System.out.println(progBytes.get(i)[1] + " " + progBytes.get(i)[0]);
            }
            //System.out.println("instrxnTable");
            for (int i = 0; i < instrxnTable.size(); i++) {
                //System.out.println(instrxnTable.get(i)[1] + " " + instrxnTable.get(i)[0]);
            }
            rtd.initMem(labelTable, progBytes, instrxnTable);
            jTable2.setModel(rtd.updateMemDisplay());
            jTable1.setModel(rtd.updateRegsDisplay());
            jButton2.setEnabled(true);
            rtd.pc = Integer.toHexString(cstart);
            updateInternals();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    public void updateTableDisplay() {
        jTable2.setModel(rtd.updateMemDisplay());
        jTable1.setModel(rtd.updateRegsDisplay());
    }

    private String getAluOut(String rs, String rt, String operation) {
        String ret = "";
        int ans = 0;
        int irs = Integer.parseInt(rs, 16);
        int irt = Integer.parseInt(rt, 16);
        if (operation.equalsIgnoreCase("DADDU") || operation.equalsIgnoreCase("DADDIU")) {
            ans = irs + irt;
        } else if (operation.equalsIgnoreCase("DSUBU")) {
            ans = irs - irt;
        }
        ret = Integer.toHexString(ans);
        for (int i = ret.length(); i < 16; i++) {
            ret = "0" + ret;
        }
        ////System.out.println(ret);
        return ret;
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //IF
        rtd.ifIdIr = rtd.getMemContent(rtd.pc, 4);
        String ib = rtd.bto.cvtHexToBin(rtd.PrevExMemIr);
        if (ib.length() > 1) {
            ib = rtd.bto.cvtHexToBin(rtd.PrevExMemIr).substring(0, 6);
        }
        //System.out.println(ib);
        boolean isBranch = rtd.bto.getOpcodeOperationType(ib).equalsIgnoreCase("branch");
        //System.out.println(rtd.bto.getOpcodeOperationType(ib));
        //System.out.println(rtd.PrevExMemCond);
        if (isBranch && rtd.PrevExMemCond.equalsIgnoreCase("1")) {
            System.out.println("branch");
            rtd.ifIdNpc = rtd.PrevExMemAluOut;
            rtd.pc = Integer.toHexString(Integer.parseInt(rtd.ifIdNpc, 16));
            rtd.ifIdIr = rtd.getMemContent(rtd.pc, 4);

        } else {
            int newPc = Integer.parseInt(rtd.pc, 16) + 4;
            rtd.ifIdNpc = Integer.toHexString(newPc);
            rtd.pc = rtd.ifIdNpc;
        }
        //ID
        if (!rtd.PrevIfIdIr.equalsIgnoreCase("")) {
            String rs = rtd.getRegContent(rtd.bto.cvtHexToBin(rtd.PrevIfIdIr).substring(6, 11));
            String rt = rtd.getRegContent(rtd.bto.cvtHexToBin(rtd.PrevIfIdIr).substring(11, 16));
            ////System.out.println(rs);
            ////System.out.println(rt);
            rtd.idExA = rs;
            rtd.idExB = rt;
            rtd.idExNpc = rtd.PrevIfIdNpc;
            rtd.idExIr = rtd.PrevIfIdIr;
            String imm = rtd.bto.cvtHexToBin(rtd.PrevIfIdIr).substring(16, 32);
            for (int i = imm.length(); i < 64; i++) {
                imm = imm.substring(0, 1) + imm;
            }
            rtd.idExImm = rtd.bto.cvtBinToHex(imm);
            //EX
            if (!rtd.PrevIdExIr.equalsIgnoreCase("")) {
                rtd.exMemIr = rtd.PrevIdExIr;
                String ie = rtd.bto.cvtHexToBin(rtd.exMemIr).substring(0, 6);
                ////System.out.println(ie);
                if (rtd.bto.getOpcodeOperationType(ie).equalsIgnoreCase("alu")) {
                    ////System.out.println("alu");
                    if (rtd.bto.getOpcodeType(ie).equalsIgnoreCase("r")) {
                        ////System.out.println("r");
                        String func = rtd.bto.getFuncFunc(rtd.bto.cvtHexToBin(rtd.exMemIr).substring(26, 32));
                        rtd.exMemAluOut = getAluOut(rtd.PrevIdExA, rtd.PrevIdExB, func);
                        //System.out.println(func);
                    } else if (rtd.bto.getOpcodeType(ie).equalsIgnoreCase("i")) {
                        ////System.out.println("i");
                        String operator = rtd.bto.getBinOperator(rtd.bto.cvtHexToBin(rtd.exMemIr).substring(0, 6));
                        rtd.exMemAluOut = getAluOut(rtd.PrevIdExA, rtd.PrevIdExImm, operator);
                    }
                } else if (rtd.bto.getOpcodeOperationType(ie).equalsIgnoreCase("ls")) {
                    ////System.out.println("ls");
                    rtd.exMemAluOut = getAluOut(rtd.PrevIdExA, rtd.PrevIdExImm, "DADDU");
                    rtd.exMemB = rtd.PrevIdExB;
                } else if (rtd.bto.getOpcodeOperationType(ie).equalsIgnoreCase("branch")) {
                    ////System.out.println("branch");
                    if (rtd.bto.getOpcodeType(ie).equalsIgnoreCase("j")) {
                        rtd.exMemAluOut = rtd.PrevIdExImm;
                        System.out.println(rtd.exMemAluOut);
                        rtd.exMemCond = "1";
                    } else if (rtd.bto.getOpcodeType(ie).equalsIgnoreCase("b")) {
                        rtd.exMemAluOut = getAluOut(rtd.PrevIdExNpc, rtd.PrevIdExImm + "00", "DADDU");
                        rtd.exMemCond = (rtd.PrevIdExA.equalsIgnoreCase("0000000000000000")) ? "1" : "0";
                    }
                }
                //MEM
                if (!rtd.PrevExMemIr.equalsIgnoreCase("")) {
                    rtd.memWdIr = rtd.PrevExMemIr;
                    String im = rtd.bto.cvtHexToBin(rtd.memWdIr).substring(0, 6);
                    //System.out.println(im);
                    if (rtd.bto.getOpcodeOperationType(im).equalsIgnoreCase("alu")) {
                        //System.out.println("alu");
                        rtd.memWbAluOut = rtd.PrevExMemAluOut;
                        //rtd.memExMemAluOut = rtd.PrevExMemAluOut;
                    } else if (rtd.bto.getOpcodeOperationType(im).equalsIgnoreCase("ls")) {
                        //System.out.println("ls");
                        String operatorFc = rtd.bto.getOpcodeOperator(rtd.bto.cvtHexToBin(rtd.memWdIr).substring(0, 6)).substring(0, 1);
                        String operatorSc = rtd.bto.getOpcodeOperator(rtd.bto.cvtHexToBin(rtd.memWdIr).substring(0, 6)).substring(1, 2);
                        int width = rtd.bto.getWidth(operatorSc);
                        //System.out.println(operatorFc);
                        if (operatorFc.equalsIgnoreCase("L")) {
                            String fira = ""+Integer.parseInt(rtd.PrevExMemAluOut);
                            rtd.memWbLmd = rtd.bto.zeroExtend64(rtd.getMemContent(fira, width));
                            //System.out.println(rtd.PrevExMemAluOut);
                            //System.out.println(width);
                            //System.out.println(rtd.memWbLmd);
                            //System.out.println(rtd.getMemContent(fira, width));
                        } else if (operatorFc.equalsIgnoreCase("S")) {
                            rtd.memExMemAluOut = rtd.PrevExMemB;
                            rtd.setMemContent(rtd.PrevExMemAluOut, width, rtd.PrevExMemB);
                        }
                    }
                    //WB
                    if (!rtd.PrevMemWdIr.equalsIgnoreCase("")) {
                        String wb = rtd.PrevMemWdIr;
                        String iw = rtd.bto.cvtHexToBin(wb).substring(0, 6);
                        //System.out.println(rtd.PrevMemWdIr);
                        String rdref = rtd.bto.cvtHexToBin(wb).substring(16, 16 + 5);
                        String rtref = rtd.bto.cvtHexToBin(wb).substring(11, 11 + 5);
                        ////System.out.println(ie);
                        if (rtd.bto.getOpcodeOperationType(iw).equalsIgnoreCase("alu")) {
                            ////System.out.println("alu");
                            if (rtd.bto.getOpcodeType(iw).equalsIgnoreCase("r")) {
                                rtd.setRegContent(rdref, rtd.PrevMemWbAluOut);
                                //System.out.println("WB R");
                                //System.out.println(rdref);
                                //System.out.println(rtd.PrevMemWbAluOut);
                            } else if (rtd.bto.getOpcodeType(iw).equalsIgnoreCase("i")) {
                                rtd.setRegContent(rtref, rtd.PrevMemWbAluOut);
                                //System.out.println("WB I");
                                //System.out.println(rtref);
                                //System.out.println(rtd.PrevMemWbAluOut);
                            }
                            rtd.regsMemWbIr = rtd.PrevMemWbAluOut;
                        } else if (rtd.bto.getOpcodeOperationType(iw).equalsIgnoreCase("ls")) {
                            //System.out.println("ls");
                            String operatorFc = rtd.bto.getOpcodeOperator(rtd.bto.cvtHexToBin(wb).substring(0, 6)).substring(0, 1);
                            String operatorSc = rtd.bto.getOpcodeOperator(rtd.bto.cvtHexToBin(wb).substring(0, 6)).substring(1, 2);
                            int width = rtd.bto.getWidth(operatorSc);
                            //System.out.println(operatorFc);
                            if (operatorFc.equalsIgnoreCase("L")) {
                                rtd.setRegContent(rtref, rtd.PrevMemWbLmd);
                                rtd.regsMemWbIr = rtd.PrevMemWbAluOut;
                            }
                        }
                    }
                }
            }
            rtd.setRegContent("00000", "0000000000000000");
        }
        updateInternals();
        updateTableDisplay();
        rtd.updatePrevs();
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
